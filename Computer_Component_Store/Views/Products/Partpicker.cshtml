@model IEnumerable<Computer_Component_Store.Data.ComputerComponentProduct>
@{
    ViewData["Title"] = "Part Picker";
}

<h2>Part Picker</h2>
<div class="row">
    <div class="col">
        <label for="Hardcore" class="partpicker-label">Hardcore</label>
        <input type="checkbox" name="Hardcore" id="Hardcore" data-on="Yes" data-off="No" />
    </div>
    <div class="col">
        <label for="Casual" class="partpicker-label">Casual</label>
        <input type="checkbox" name="Casual" id="Casual" data-on="Yes" data-off="No" />
    </div>
    <div class="col">
        <label for="Pleb" class="partpicker-label">Pleb</label>
        <input type="checkbox" name="Pleb" id="Pleb" data-on="Yes" data-off="No" />
    </div>
</div>

@* Hardcore *@
<form asp-action="index" method="post">
    <div class="row" id="HardcorePicker" style="display:none;">
        <h1>The Most Expensive Builds Only</h1>
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <select class="form-control form-control-lg" onchange="setMotherboardValueHardcore(event)">
                        <option selected>Choose Motherboard</option>
                        @foreach (var product in Model.Where(x => x.Category == "MOTHERBOARD" && (x.CompatibilityType == "ALL" || x.CompatibilityType == "A")))
                        {
                            <option value="@product.ID">@product.Name : @product.Price</option>
                        }
                    </select>
                    <input type="hidden" name="MotherboardIDHardcore" value="" id="MotherboardIDHardcore" />

                </div>
            </div>
        </div>
    </div>
    <div class="row" id="VideoCardPickerHardcore" style="display:none;">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <select class="form-control form-control-lg" onchange="setVideoCardValueHardcore(event)">
                        <option selected>Choose Video Card</option>
                        @foreach (var product in Model.Where(x => x.Category == "VIDEOCARD" && (x.CompatibilityType == "ALL" || x.CompatibilityType == "A")))
                        {
                            <option value="@product.ID">@product.Name : @product.Price</option>
                        }
                    </select>
                    <input type="hidden" name="VideoCardIDHardcore" value="" id="VideoCardIDHardcore" />
                </div>
            </div>
        </div>
    </div>
    <div class="row" id="ProcessorPickerHardcore" style="display:none;">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <select class="form-control form-control-lg" onchange="setProcessorValueHardcore(event)">
                        <option selected>Choose Processor</option>
                        @foreach (var product in Model.Where(x => x.Category == "PROCESSOR" && (x.CompatibilityType == "ALL" || x.CompatibilityType == "A")))
                        {
                            <option value="@product.ID">@product.Name : @product.Price</option>
                        }
                    </select>
                    <input type="hidden" name="ProcessorIDHardcore" value="" id="ProcessorIDHardcore" />
                </div>
            </div>
        </div>
    </div>
    <div class="row" id="RAMPickerHardcore" style="display:none;">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <select class="form-control form-control-lg" onchange="setRAMValueHardcore(event)">
                        <option selected>Choose RAM</option>
                        @foreach (var product in Model.Where(x => x.Category == "RAM" && (x.CompatibilityType == "ALL" || x.CompatibilityType == "A")))
                        {
                            <option value="@product.ID">@product.Name : @product.Price</option>
                        }
                    </select>
                    <input type="hidden" name="RAMIDHardcore" value="" id="RAMIDHardcore" />
                </div>
            </div>
        </div>
    </div>
    <div class="row" id="StoragePickerHardcore" style="display:none;">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <select class="form-control form-control-lg" onchange="setStorageValueHardcore(event)">
                        <option selected>Choose Storage</option>
                        @foreach (var product in Model.Where(x => x.Category == "STORAGE" && (x.CompatibilityType == "ALL" || x.CompatibilityType == "A")))
                        {
                            <option value="@product.ID">@product.Name : @product.Price</option>
                        }
                    </select>
                    <input type="hidden" name="StorageIDHardcore" value="" id="StorageIDHardcore" />
                </div>
            </div>
        </div>
    </div>
    <div class="row" id="CoolingSystemPickerHardcore" style="display:none;">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <select class="form-control form-control-lg" onchange="setCoolingSystemValueHardcore(event)">
                        <option selected>Choose Cooling System</option>
                        @foreach (var product in Model.Where(x => x.Category == "COOLINGSYSTEM" && (x.CompatibilityType == "ALL" || x.CompatibilityType == "A")))
                        {
                            <option value="@product.ID">@product.Name : @product.Price</option>
                        }
                    </select>
                    <input type="hidden" name="CoolingSystemIDHardcore" value="" id="CoolingSystemIDHardcore" />
                </div>
            </div>
        </div>
    </div>
    <input type="submit" class="btn btn-primary" id="HardcoreSubmitButton" value="Add To Cart" style="width:100%; background-color:#9b333f;" disabled />
</form>






<script type="text/javascript">
    var Hardcore = document.getElementById('Hardcore');
    var Casual = document.getElementById('Casual');
    var Pleb = document.getElementById('Pleb');

    var Hardcorepicker = document.getElementById('HardcorePicker');
    var CasualPicker = document.getElementById('CasualPicker');
    var PlebPicker = document.getElementById('PlebPicker');   

    var disableHardcore = document.getElementById('Hardcore');
    var disableCasual = document.getElementById('Casual');
    var disablePleb = document.getElementById('Pleb');
            

    /* Hardcore */
    Hardcore.addEventListener('click', function () {
        if (this.checked) {
            Hardcorepicker.style.display = 'block';
            disableCasual.disabled = true;
            disablePleb.disabled = true;
        }
        else {
            Hardcorepicker.style.display = 'none';
            disableCasual.disabled = false;
            disablePleb.disabled = false;
        }
    });

    
    function setMotherboardValueHardcore(e) {
        document.getElementById("MotherboardIDHardcore").value = e.target.value;
        e.target.value != "Choose Motherboard" ? document.getElementById("VideoCardPickerHardcore").style.display = "flex" : document.getElementById("VideoCardPickerHardcore").style.display = "none";
    }
    function setVideoCardValueHardcore(e) {
        document.getElementById("VideoCardIDHardcore").value = e.target.value;
        e.target.value != "Choose Video Card" ? document.getElementById("ProcessorPickerHardcore").style.display = "flex" : document.getElementById("ProcessorSystemPickerHardcore").style.display = "none";
    }

    function setProcessorValueHardcore(e) {
        document.getElementById("ProcessorIDHardcore").value = e.target.value;
        e.target.value != "Choose Processor" ? document.getElementById("RAMPickerHardcore").style.display = "flex" : document.getElementById("RAMPickerHardcore").style.display = "none";
    }
    function setRAMValueHardcore(e) {
        document.getElementById("RAMIDHardcore").value = e.target.value;
        e.target.value != "Choose RAM" ? document.getElementById("StoragePickerHardcore").style.display = "flex" : document.getElementById("StoragePickerHardcore").style.display = "none";
    }
    function setStorageValueHardcore(e) {
        document.getElementById("StorageIDHardcore").value = e.target.value;
        e.target.value != "Choose Storage" ? document.getElementById("CoolingSystemPickerHardcore").style.display = "flex" : document.getElementById("CoolingSystemPickerHardcore").style.display = "none";
    }

    function setCoolingSystemValueHardcore(e) {
        document.getElementById("CoolingSystemIDHardcore").value = e.target.value;
        e.target.value == "Choose Cooling System" ? document.getElementById("HardcoreSubmitButton").disabled = true : document.getElementById("HardcoreSubmitButton").disabled = false;
    }




    /*Casual */
    
    Casual.addEventListener('click', function () {
        if (this.checked) {
            CasualPicker.style.display = 'block';
            disableHardcore.disabled = true;
            disablePleb.disabled = true;
        }
        else {
            CasualPicker.style.display = 'none';
            disableHardcore.disabled = false;
            disablePleb.disabled = false;
        }
    });

    function setMotherboardValueCasual(e) {
        document.getElementById("motherboardIDCasual").value = e.target.value;
        e.target.value == "Choose Motherboard" ? document.getElementById("motherboardSubmitButtonCasual").disabled = true : document.getElementById("motherboardSubmitButtonCasual").disabled = false;
        document.getElementById("cablePickerCasual").style.display = "flex";
    }
    function setCableValueCasual(e) {
        document.getElementById("cableIDCasual").value = e.target.value;
        e.target.value == "Choose Cable" ? document.getElementById("cableSubmitButtonCasual").disabled = true : document.getElementById("cableSubmitButtonCasual").disabled = false;
        document.getElementById("coolingSystemPickerCasual").style.display = "flex";

    }
    function setCoolingSystemValueCasual(e) {
        document.getElementById("CoolingSystemIDCasual").value = e.target.value;
        console.log(e.target.value);
        e.target.value == "Choose Cooling System" ? document.getElementById("coolingSystemSubmitButtonCasual").disabled = true : document.getElementById("coolingSystemSubmitButtonCasual").disabled = false;
    }


    /* Pleb */
    
    Pleb.addEventListener('click', function () {
        if (this.checked) {
            PlebPicker.style.display = 'block';
            disableHardcore.disabled = true;
            disableCasual.disabled = true;
        }
        else {
            PlebPicker.style.display = 'none';
            disableHardcore.disabled = false;
            disableCasual.disabled = false;
        }
    });

    function setMotherboardValuePleb(e) {
        document.getElementById("motherboardIDPleb").value = e.target.value;
        e.target.value == "Choose Motherboard" ? document.getElementById("motherboardSubmitButtonPleb").disabled = true : document.getElementById("motherboardSubmitButtonPleb").disabled = false;
        document.getElementById("cablePickerPleb").style.display = "flex";
    }
    function setCableValuePleb(e) {
        document.getElementById("cableIDPleb").value = e.target.value;
        e.target.value == "Choose Cable" ? document.getElementById("cableSubmitButtonPleb").disabled = true : document.getElementById("cableSubmitButtonPleb").disabled = false;
        document.getElementById("coolingSystemPickerPleb").style.display = "flex";

    }
    function setCoolingSystemValuePleb(e) {
        document.getElementById("CoolingSystemIDPleb").value = e.target.value;
        console.log(e.target.value);
        e.target.value == "Choose Cooling System" ? document.getElementById("coolingSystemSubmitButtonPleb").disabled = true : document.getElementById("coolingSystemSubmitButtonPleb").disabled = false;
    }
    
</script>