@model Computer_Component_Store.Models.CheckoutViewModel
@{
    ViewData["Title"] = "Checkout";
}

<h2>Checkout</h2>
<div asp-validation-summary="All"></div>
<form method="post" id="checkout-form">
    <div class="form-group">
        <label asp-for="ContactEmail" class="control-label"></label>
        <input asp-for="ContactEmail" class="form-control" />
        <span asp-validation-for="ContactEmail"></span>
    </div>
    <div class="form-group">
        <label asp-for="FirstName" class="control-label"></label>
        <input asp-for="FirstName" class="form-control" />
        <span asp-validation-for="FirstName"></span>
    </div>
    <div class="form-group">
        <label asp-for="LastName" class="control-label"></label>
        <input asp-for="LastName" class="form-control" />
        <span asp-validation-for="LastName"></span>
    </div>
    <div class="form-group">
        <label asp-for="ShippingStreet" class="control-label"></label>
        <input asp-for="ShippingStreet" class="form-control" />
        <span asp-validation-for="ShippingStreet"></span>
    </div>

    <div class="form-group">
        <label asp-for="ShippingCity" class="control-label"></label>
        <input asp-for="ShippingCity" class="form-control" />
        <span asp-validation-for="ShippingCity"></span>
    </div>

    <div class="form-group">
        <label asp-for="ShippingState" class="control-label"></label>
        <select asp-for="ShippingState" class="form-control" required>
            <option value="">Select Your State</option>
            <option value="AL">Alabama</option>
            <option value="AK">Alaska</option>
            <option value="AZ">Arizona</option>
            <option value="AR">Arkansas</option>
            <option value="CA">California</option>
            <option value="CO">Colorado</option>
            <option value="CT">Connecticut</option>
            <option value="DE">Delaware</option>
            <option value="DC">District Of Columbia</option>
            <option value="FL">Florida</option>
            <option value="GA">Georgia</option>
            <option value="HI">Hawaii</option>
            <option value="ID">Idaho</option>
            <option value="IL">Illinois</option>
            <option value="IN">Indiana</option>
            <option value="IA">Iowa</option>
            <option value="KS">Kansas</option>
            <option value="KY">Kentucky</option>
            <option value="LA">Louisiana</option>
            <option value="ME">Maine</option>
            <option value="MD">Maryland</option>
            <option value="MA">Massachusetts</option>
            <option value="MI">Michigan</option>
            <option value="MN">Minnesota</option>
            <option value="MS">Mississippi</option>
            <option value="MO">Missouri</option>
            <option value="MT">Montana</option>
            <option value="NE">Nebraska</option>
            <option value="NV">Nevada</option>
            <option value="NH">New Hampshire</option>
            <option value="NJ">New Jersey</option>
            <option value="NM">New Mexico</option>
            <option value="NY">New York</option>
            <option value="NC">North Carolina</option>
            <option value="ND">North Dakota</option>
            <option value="OH">Ohio</option>
            <option value="OK">Oklahoma</option>
            <option value="OR">Oregon</option>
            <option value="PA">Pennsylvania</option>
            <option value="RI">Rhode Island</option>
            <option value="SC">South Carolina</option>
            <option value="SD">South Dakota</option>
            <option value="TN">Tennessee</option>
            <option value="TX">Texas</option>
            <option value="UT">Utah</option>
            <option value="VT">Vermont</option>
            <option value="VA">Virginia</option>
            <option value="WA">Washington</option>
            <option value="WV">West Virginia</option>
            <option value="WI">Wisconsin</option>
            <option value="WY">Wyoming</option>
        </select>
        <span asp-validation-for="ShippingState"></span>
    </div>
    <div class="form-group">
        <label asp-for="ShippingPostalCode" class="control-label"></label>
        <input asp-for="ShippingPostalCode" class="form-control" />
        <span asp-validation-for="ShippingPostalCode"></span>
    </div>

    @* BEGIN: Added for Braintree *@
    <div class="row">
        <div class="form-group col-sm-8">
            <label class="control-label">Card Number</label>
            <!--  Hosted Fields div container -->
            <div class="form-control" id="card-number"></div>
            <span class="helper-text"></span>
        </div>
        <div class="form-group col-sm-4">
            <div class="row">
                <label class="control-label col-xs-12">Expiration Date</label>
                <div class="col-xs-6">
                    <!--  Hosted Fields div container -->
                    <div class="form-control" id="expiration-month"></div>
                </div>
                <div class="col-xs-6">
                    <!--  Hosted Fields div container -->
                    <div class="form-control" id="expiration-year"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-6">
            <label class="control-label">Security Code</label>
            <!--  Hosted Fields div container -->
            <div class="form-control" id="cvv"></div>
        </div>
        <div class="form-group col-sm-6">
            <label class="control-label">Zipcode</label>
            <!--  Hosted Fields div container -->
            <div class="form-control" id="postal-code"></div>
        </div>
    </div>
    <input type="hidden" id="payment-method-nonce" name="payment_method_nonce" />
    @* END: Added for Braintree *@
    <input type="submit" value="Place Your Order" class="btn btn-primary" />
</form>

@section scripts{
    <script src="https://js.braintreegateway.com/web/3.37.0/js/client.js"></script>
    <script src="https://js.braintreegateway.com/web/3.37.0/js/hosted-fields.js"></script>
    <script>

        var form = document.querySelector('#checkout-form');
        var authorization = '@ViewData["ClientToken"]';
        var payment_method_nonce = document.querySelector("#payment-method-nonce");


        braintree.client.create({
            authorization: authorization
        }, function (err, clientInstance) {
            if (err) {
                console.error(err);
                return;
            }

            braintree.hostedFields.create({
                client: clientInstance,
                styles: {
                    'input': {
                        'font-size': '14px',
                        'font-family': 'helvetica, tahoma, calibri, sans-serif',
                        'color': '#3a3a3a'
                    },
                    ':focus': {
                        'color': 'black'
                    }
                },
                fields: {
                    number: {
                        selector: '#card-number',
                        placeholder: '4111 1111 1111 1111'
                    },
                    cvv: {
                        selector: '#cvv',
                        placeholder: '123'
                    },
                    expirationMonth: {
                        selector: '#expiration-month',
                        placeholder: 'MM'
                    },
                    expirationYear: {
                        selector: '#expiration-year',
                        placeholder: 'YY'
                    },
                    postalCode: {
                        selector: '#postal-code',
                        placeholder: '90210'
                    }
                }
            }, function (err, hostedFieldsInstance) {
                if (err) {
                    console.error(err);
                    return;
                }

                hostedFieldsInstance.on('validityChange', function (event) {
                    var field = event.fields[event.emittedBy];

                    if (field.isValid) {
                        if (event.emittedBy === 'expirationMonth' || event.emittedBy === 'expirationYear') {
                            if (!event.fields.expirationMonth.isValid || !event.fields.expirationYear.isValid) {
                                return;
                            }
                        } else if (event.emittedBy === 'number') {
                            $('#card-number').next('span').text('');
                        }

                        // Remove any previously applied error or warning classes
                        $(field.container).parents('.form-group').removeClass('has-warning');
                        $(field.container).parents('.form-group').removeClass('has-success');
                        // Apply styling for a valid field
                        $(field.container).parents('.form-group').addClass('has-success');
                    } else if (field.isPotentiallyValid) {
                        // Remove styling  from potentially valid fields
                        $(field.container).parents('.form-group').removeClass('has-warning');
                        $(field.container).parents('.form-group').removeClass('has-success');
                        if (event.emittedBy === 'number') {
                            $('#card-number').next('span').text('');
                        }
                    } else {
                        // Add styling to invalid fields
                        $(field.container).parents('.form-group').addClass('has-warning');
                        // Add helper text for an invalid card number
                        if (event.emittedBy === 'number') {
                            $('#card-number').next('span').text('Looks like this card number has an error.');
                        }
                    }
                });

                hostedFieldsInstance.on('cardTypeChange', function (event) {
                    // Handle a field's change, such as a change in validity or credit card type
                    if (event.cards.length === 1) {
                        $('#card-type').text(event.cards[0].niceType);
                    } else {
                        $('#card-type').text('Card');
                    }
                });



                $('#checkout-form').submit(function (event) {
                    if (!payment_method_nonce.value) {
                        event.preventDefault();
                        hostedFieldsInstance.tokenize(function (err, payload) {
                            if (err) {
                                console.error(err);
                                return;
                            }

                            payment_method_nonce.value = payload.nonce;

                            $('#checkout-form').submit();
                        });
                    }

                });
            });
        });

    </script>

}